#피보나치 수열
#재귀함수

def fib (n):
    if (n <= 1):
        return n
    else:
        return fib(n - 1) + fib(n - 2)

for i in range(101): #재귀에 재귀를 버벅거림
    print(fib(i), end=" ")

#-------------------------------------------------------------
#재귀적 정의 이용 : 작성하기도 쉽고 이해하기도 쉬움
#그러나 너무 비효율적이다.
#함수 호출은 부담이 큰 것인데, 중복해서하는 것은
#같은 값을 중복해서 재귀적으로 계산하지 않도록 해야함
#이미 계산한 피보나치 항의 값은 리스트에 저장
#이미 계산한 피보나치 항은 필요할 때 꺼내쓰면 된다.
#-------------------------------------------------------------

def fib2 (n):
    f = [0] * (n + 1)
    if (n > 0):
        f[1] = 1
        for i in range(2, n + 1):
            f[i] = f[i - 1] + f[i - 2]
    return f[n]

for i in range(101):
    print(fib2(i), end=" ")

#두 번째 재귀함수가 공간적인 부분에서 비효율적이다.
#첫 번째 재귀함수는 시간적인 부분에서 비효율적이다.
#성능
#1) 시간 2) 공간
# 리스트 f를 사용하지 않고 반복문으로 피보나치항을 구하기
 